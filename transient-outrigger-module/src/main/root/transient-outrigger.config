import net.jini.core.entry.Entry;
import net.jini.jeri.BasicILFactory;
import net.jini.jeri.BasicJeriExporter;
import net.jini.jeri.tcp.TcpServerEndpoint;
import net.jini.lookup.entry.Name;
import java.security.Permission;
import net.jini.constraint.BasicMethodConstraints;
import net.jini.core.constraint.InvocationConstraints;
import net.jini.security.BasicProxyPreparer;


com.sun.jini.outrigger{

    serviceInvocationConstraints=InvocationConstraints.EMPTY;

    name = "Java Space (Outrigger)";

    initialLookupAttributes=new Entry[]{	new Name(name)};

    initialLookupGroups=new String[] {$discoveryGroup};

    serverExporter= new BasicJeriExporter(TcpServerEndpoint.getInstance(0),
                                 new BasicILFactory());
    basicProxyPreparer =
        new BasicProxyPreparer(false, new BasicMethodConstraints(serviceInvocationConstraints),
        new Permission[] { new RuntimePermission("accessClassInPackage.com.sun.proxy") } );

    transactionManagerPreparer=basicProxyPreparer;
    listenerPreparer=basicProxyPreparer;

}


net.jini.lookup.JoinManager {
    serviceInvocationConstraints=InvocationConstraints.EMPTY;
        
    basicProxyPreparer =
        new BasicProxyPreparer(false, new BasicMethodConstraints(serviceInvocationConstraints),
            new Permission[] { new RuntimePermission("accessClassInPackage.com.sun.proxy") } );

    registrarPreparer = basicProxyPreparer;
    registrationPreparer = basicProxyPreparer;
    serviceLeasePreparer = basicProxyPreparer;
    
}