/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

addedPlatformCodebaseJar=Added platform codebase jar ''{0}''.
addingClasspathEntry=Adding classpath entry ''{0}''.
annotatedObjectDeployerHasUnresolvedDependencies=Initialization failed because \
one or more dependencies flagged with @Injected or @Name annotations \
are unresolved.
autoDeployerFailedInit=Automatic Starter-Service deployer has failed to initialize.
autoDeployerStarting=Automatic deployer service is starting up.
badClasspathExpression=Bad Classpath Expression {0} {1}.
badMemberForInjectedAnnotation=@Injected annotation must be applied to a field or\
 setter method only: Member {1} on class {0} doesn't qualify.
badMemberForNameAnnotation=@Name annotation must be applied to a String field or\
 setter method only: Member {1} on class {0} doesn't qualify.
basicWorkManagerInitialized=Basic Work Manager was initialized.
callingMain=Calling main method on class ''{0}'' with arguments {1}.
cantConvertException=Can''t convert type ''{0}'' to ''{1}''.
cantReadStartProperties=Can''t read starter configuration file ''{0}'' in ''{1}''.
circularClasspath=Definition of classpath ''{0}'' contains a circular reference.
classLoaderIs=ClassLoader for class {0} is {1}.
classpathUndefined=No definition found for classpath id ''{0}''.
classServerBadRequest=bad request \"{0}\" from {1}:{2}
classServerErrorAcceptingConnections=Class Server was terminated due to IOException while accepting connections.
classServerEstablished=Class Server established on host {0} port {1}.
classServerExceptionDuringShutdown=Class Server caught an exception during shutdown, which was ignored.
classServerExceptionGettingBytes=Class Server caught an exception while getting bytes to serve the request.
classServerExceptionWritingResponse=Class Server caught an exception writing the response, so terminated the response.
classServerInitFailed=Class Server initialization failed.
classServerNoContentFound=Class Server has no content for path ''{0}''.
classServerRejectedPath=Rejected request for path ''{0}'' (returning 404).
classServerReceivedProbe={0} probed from {1}:{2}
classServerReceivedRequest={0} requested from {1}:{2}
classServerTerminated=Class Server terminated as part of normal shutdown on host {0} port {1}.
clientAppUsage=Usage: run.sh client <app-name> [parameters*]
codeSourceIs=CodeSource for service in ''{0}'' is ''{1}''.
completedServiceDeployment=Completed deployment of service in {0}.
configFile=Configuration file is ''{0}''.
configuredClasspath=The configured classpath with id ''{0}'' is {1}.
contextItem=Context key {0} refers to ''{1}''.
createdThread=Created thread named ''{0}'' in thread group ''{1}''.
duplicateClasspath=Duplicate class path entry for id ''{0}''.
exceptionThrown=Exception thrown:\n{0}
exceptionWhileStopping=Exception thrown during stop operation:\n{0}
executorNameIs=Executor name is ''{0}''.
failedCleanShutdown=Application ''{0}'' failed to shutdown cleanly, so we're interrupting it.
failedDeployService=Deployment of service archive at ''{0}'' failed.
failedReadProperties=Failed to read one or more properties files.
failedToRemoveMBean=Failed to remove MBean for application ''{0}''.
failedToSetProperty=Failed to set property ''{0}'' on component class ''{1}'' to ''{2}''.
foundNoServiceArchives=Found no service archives for deployment dir ''{0}''.
foundServiceArchives=Found {0} service archives in deployment dir ''{1}''.
grantsToClassAre=Permissions granted to class ''{0}'' are {1}.
illegalArgumentException=An operation threw an IllegalArgumentException.
illegalAccessException=An operation threw an IllegalAccessException.
invalidClasspathEntry=Invalid classpath entry: {0}
invocationTargetException=An operation threw an InvocationTargetException.
initializingEventTable=Initializing event table for class ''{0}''.
initializationException=An exception has occured while initializing the container.
initMethodHasParameters=A method flagged as @Init must take no parameters.  \
Method ''{1}'' on class ''{0}'' has parameters.
initMethodIsntVoid=A method flagged as @Init must be void return type.  \
Method ''{1}'' on class ''{0}'' returns ''{2}''.
inject=Injecting {2} into member ''{1}'' of deployed object {0}.
missingPropertyEntry="Properties file ''{0}'' is missing entry for ''{1}''.
missingSpecialValue=Deployer configuration file ''{0}'' calls for a special entry called\n\
''{1}'' to be created with value expression ''{2}'', but the value resolves to null.\n\
This is unlikely to be the desired behavior, so check to see if you''re missing\n\
value ''{2}'' in other configurations or command line parameters.
nThreadsLeft=Application ''{0}'' has {1} threads currently running.
noDeploymentDirectory=No deployment directory called {0} found in {1}; \
skipping deployment.
noSuchClientApp=There is no client app ''{0}'' installed.
parentClassLoaderIs=Parent class loader is {0}.
policyDeclined=No permissions granted to protection domain with classloader {0}.
portInUse=Port {0} in use, trying next one.
profileConfigurationException=Failed to read the configuration for profile {0}.
profileConfigLoading=Loading the profile configuration with classloader {0}.
readProperties=...properties read were {0}.
readPropertiesFile=Read properties file ''{0}''.
readingObject=Reading instance of {1} named ''{0}'' for unresolved dependencies.
readingObject.memberCount={0} members found.
readingObject.annotatedMemberFound=Member ''{0}'' is annotated @Injected.
readingObject.nonAnnotatedMemberFound=Member ''{0}'' is not annotated @Injected.
receivedStart=Received start event while in state {0}.
receivedStartWithArgs=Received start with arguments event while in state {0}.
scanningDeploymentDirectory=Scanning deployment directory ''{0}''.
securityInitializationFailed=Failed to initialize security subsystem.
securityInitializationSucceeded=Security Manager and Dynamic Policy successfully installed.            
securityInitializationWrongPolicy=After security manager setup, the wrong policy is installed: {0}.
serviceParentClassloaderIs=Parent of service classloader is {0}.
setPropertyOnComponent=Property ''{0}'' on component {1}''{2}'' was set to ''{3}''.
showCommandLineArguments=Command line arguments were: {0}.
shutdownFailed=Application ''{0}'' has failed to shut down - there are threads still running.
shutdownMethodHasParameters=A method flagged as @Shutdown must take no parameters.  \
Method ''{1}'' on class ''{0}'' has parameters.
shutdownMethodIsntVoid=A method flagged as @Shutdown must be void return type.  \
Method ''{1}'' on class ''{0}'' returns ''{2}''.
starterServiceDeployerFailedInit=Starter-Service deployer has failed to initialize.
starterServiceDeployerInitialized=Starter-Service deployer named ''{0}'' completed \
initialization.
starterServiceDeployerStarting=Starter-Service deployer named ''{0}'' is being \
initialized.
startingService=Starting service ''{0}''.
startupDeployerFailedInit=Starter-Service deployer has failed to initialize.
startupDeployerInitialized=Starter-Service deployer named ''{0}'' completed \
initialization.
startupDeployerStarting=Starter-Service deployer named ''{0}'' is being \
initialized.
stoppingService=Stopping service ''{0}''.
systemClassLoaderIs=System classloader is ''{0}'' with classpath {1}.
unresolvedDependency=Object {0} has an unresolved dependent member ''{1}'' \
(name=''{2}'').
unsupportedElement=Element type {0} is currently unsupported.
updatingService=Updating service ''{0}''.
