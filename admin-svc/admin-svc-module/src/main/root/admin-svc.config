import java.security.Permission;
import net.jini.constraint.BasicMethodConstraints;
import net.jini.core.constraint.InvocationConstraints;
import net.jini.core.entry.Entry;
import net.jini.core.lookup.ServiceID;
import net.jini.discovery.LookupDiscovery;
import net.jini.jeri.BasicILFactory;
import net.jini.jeri.BasicJeriExporter;
import net.jini.jeri.tcp.TcpServerEndpoint;
import net.jini.lookup.JoinManager;
import net.jini.lookup.entry.Name;
import net.jini.security.BasicProxyPreparer;

basic {
	
    groups = new String[] {$discoveryGroup};
    
    exporter = new BasicJeriExporter(TcpServerEndpoint.getInstance(0),
                                     new BasicILFactory());

    serviceInvocationConstraints=InvocationConstraints.EMPTY;
        
    registrarPreparer = 
        new BasicProxyPreparer(false, new BasicMethodConstraints(serviceInvocationConstraints),
            new Permission[] { new RuntimePermission("accessClassInPackage.com.sun.proxy") } );

    static discoveryManager = 
        new LookupDiscovery( groups, this);

    static attributes = new Entry[] { new Name("admin-service") };

    scheduledExecutorService=$scheduledExecutorService;

    context=$context;

    workingDirectory=$workingDirectory;

}

net.jini.lookup.JoinManager {
    registrarPreparer = basic.registrarPreparer;
    registrationPreparer = basic.registrarPreparer;
    
}
